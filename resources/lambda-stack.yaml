AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda function to filter Kinesis data stream records

Parameters:
  ConfigFile:
    Type: String
    Description: Path to the configuration file

  KinesisStream:
    Type: String
    Description: ARN of the Kinesis stream

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: validation-lambda-repo
      RepositoryPolicyText: 
      Version: "2012-10-17"
      Statement: 
        - 
          Sid: AllowPushPull
          Effect: Allow
          Principal: 
            AWS: 
              - "arn:aws:iam::294331937131:user/jayant"
              - "arn:aws:iam::294331937131:user/root"
          Action: 
            - "ecr:GetDownloadUrlForLayer"
            - "ecr:BatchGetImage"
            - "ecr:BatchCheckLayerAvailability"
            - "ecr:PutImage"
            - "ecr:InitiateLayerUpload"
            - "ecr:UploadLayerPart"
            - "ecr:CompleteLayerUpload"
      ImageScanningConfiguration:
        ScanOnPush: true
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/validation-lambda/
      DockerTag: !Sub 'validation-lambda-${ConfigFile.EnvironmentType}-${ConfigFile.Region}'
  ValidationLambdaFunction:
    Type: AWS::Serverless::Function
    DependsOn: ECRRepository
    Properties:
      FunctionName: !Sub 'validation-lambda-${ConfigFile.EnvironmentType}-${Region}'
      Handler: 
      PackageType: Image
      ImageUri: !GetAtt ECRRepository.RepositoryUri
      Architectures:
        - x86_64
      Events:
        Stream:
          Type: Kinesis
          Properties:
            Stream: !Ref KinesisStream
            StartingPosition: TRIM_HORIZON
            BatchSize: 100

Outputs:
  ValidationLambdaECR:
    Value: !GetAtt ECRRepository.RepositoryUri
  ValidationLambdaArn:
    Type: !GetAtt ValidationLambdaFunction.Arn
