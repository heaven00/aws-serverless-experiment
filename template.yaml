AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Environment:
    Type: String
    Description: deployment environment
  Region:
    Type: String
    Description: AWS region
  ECRRepositoryTag:
    Type: String
    Description: ECR repository URI

Resources:
  FraudDetectionBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Region}-${Environment}-fraud-detection-data"
      VersioningConfiguration:
        Status: Suspended
        

  KinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub ${AWS::AccountId}-kinesis-stream
      ShardCount: 1

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: execution-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !GetAtt FraudDetectionBucket.Arn
              - Effect: Allow
                Action:
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:DescribeStream
                  - kinesis:DescribeStreamSummary
                  - kinesis:ListShards
                  - kinesis:ListStreams
                Resource: !GetAtt KinesisStream.Arn

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ImageUri: !Sub 294331937131.dkr.ecr.ca-central-1.amazonaws.com/fraud-detection/validation-lambda:${ECRRepositoryTag}
      PackageType: Image
  
  version:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaFunction

  ValidDataDump:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      DestinationConfig:
        OnSuccess:
          Destination: !GetAtt FraudDetectionBucket.Arn
        OnFailure:
          Destination: !GetAtt FraudDetectionBucket.Arn
      FunctionName: !Ref LambdaFunction
      MaximumRetryAttempts: 2
      Qualifier: !GetAtt version.Version


  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: kinesis.amazonaws.com
      SourceArn: !GetAtt KinesisStream.Arn

  KinesisEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt KinesisStream.Arn
      FunctionName: !Ref LambdaFunction
      StartingPosition: LATEST
      BatchSize: 100
      Enabled: true

  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: firehose-execution-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !GetAtt FraudDetectionBucket.Arn
              - Effect: Allow
                Action:
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                Resource: !GetAtt LambdaFunction.Arn

  KinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub "${AWS::AccountId}-firehose-stream"
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        RoleARN: !GetAtt FirehoseRole.Arn
        BucketARN: !GetAtt FraudDetectionBucket.Arn
        Prefix: processed-data/
        ErrorOutputPrefix: failed-data/
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: Lambda
              Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt LambdaFunction.Arn

Outputs:
  KinesisStreamName:
    Value: !Ref KinesisStream
    Description: Name of the Kinesis stream created
  BucketARN:
    Value: !Sub arn:aws:s3:::${Region}-${Environment}-fraud-detection-data/
    Description: ARN of the S3 bucket where processed data will be stored